<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="TdSystembulletinNoticeMapper">
  <resultMap id="BaseResultMap" type="TdSystembulletinNotice">
    <id column="notice_id" jdbcType="VARCHAR" property="noticeId" />
    <result column="notice_context" jdbcType="VARCHAR" property="noticeContext" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
     <result column="remark" jdbcType="TIMESTAMP" property="remark" />
      <result column="notice_status" jdbcType="TIMESTAMP" property="noticeStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notice_id, notice_context, created, updated,remark,notice_status
  </sql>
  <select id="selectByExample" parameterType="TdSystembulletinNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from td_systembulletin_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from td_systembulletin_notice
    where notice_id = #{noticeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from td_systembulletin_notice
    where notice_id = #{noticeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="TdSystembulletinNoticeExample">
    delete from td_systembulletin_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="TdSystembulletinNotice">
    insert into td_systembulletin_notice (notice_id, notice_context, created, 
      updated)
    values (#{noticeId,jdbcType=VARCHAR}, #{noticeContext,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="TdSystembulletinNotice">
    insert into td_systembulletin_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="noticeContext != null">
        notice_context,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="noticeId != null">
        #{noticeId,jdbcType=VARCHAR},
      </if>
      <if test="noticeContext != null">
        #{noticeContext,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="TdSystembulletinNoticeExample" resultType="java.lang.Long">
    select count(*) from td_systembulletin_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update td_systembulletin_notice
    <set>
      <if test="record.noticeId != null">
        notice_id = #{record.noticeId,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeContext != null">
        notice_context = #{record.noticeContext,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update td_systembulletin_notice
    set notice_id = #{record.noticeId,jdbcType=VARCHAR},
      notice_context = #{record.noticeContext,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="TdSystembulletinNotice">
    update td_systembulletin_notice
    <set>
      <if test="noticeContext != null">
        notice_context = #{noticeContext,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where notice_id = #{noticeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="TdSystembulletinNotice">
    update td_systembulletin_notice
    set notice_context = #{noticeContext,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where notice_id = #{noticeId,jdbcType=VARCHAR}
  </update>
   <select id="getAllTdSystemNoticelistPage" parameterType="page" resultType="pd">
		select
		<include refid="Base_Column_List"></include>
		
		 from td_systembulletin_notice
		 
		 <where>
		
		 <choose>
		 <when test="pd.noticeStatus!=null and pd.noticeStatus==''">
		  and notice_status = #{noticeStatus}
		 </when>
		 <otherwise>
		  and notice_status = 1
		 </otherwise>
		 </choose>
		 </where>
	 
	    order by updated  desc
	</select>
</mapper>